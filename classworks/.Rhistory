mtcars(mtcars,vs=0)
mtcars(mtcars,vs==0)
mtcars(mtcars,$vs==0)
mtcars[mtcars$am == 0, ]
mtcars(mtcars$vs==0)
mtcars[mtcars $cyl==6 ,]
mtcars[mtcars$vs==0,]
mtcars[mtcars $cyl==6 ,]
#find the max mpg of 4 cylinder cars
mtcars[mtcars$cyl==4,]
#find the max mpg of 4 cylinder cars
car=mtcars[mtcars$cyl==4,]
max(car)
head(mtcars)
max(mtcars)
mtcars[mtcars$mpg>20,]
subset(mtcars,mpg>20)
mtcars[mtcars$am,]
mtcars[mtcars$am == 0, ]
mtcars[mtcars$vs==0,]
mtcars[mtcars $cyl==6 ,]
#find the max mpg of 4 cylinder cars
car=mtcars[mtcars$cyl==4,]
max(car)
#find the max mpg of 4 cylinder cars
car=max(mtcars[mtcars$cyl==4,])
car
mtcars[car $mpg]
#find the max mpg of 4 cylinder cars
car=max(mtcars$mpg[mtcars$cyl==4,])
#find the max mpg of 4 cylinder cars
car=max(mtcars$mpg[mtcars$cyl==4])
car
total=mtcars$am==0 & mtcars$cyl == 4
sum(total)
#find avg heighness of 8 cylinder automatic vehicle
heighness=mtacrs$cyl==8
#find avg heighness of 8 cylinder automatic vehicle
heighness=mtcars$cyl == 8
heighness
avg=mean(mtcars$wt[mtcars$cyl==8])
avg
avg=mean(mtcars$wt[mtcars$cyl==8 & mtcars$am==0])
avg
employee <- list(EmployeeID = 101, Name= "Shawn", Salary = 101599, Departments = c("Marketing","Finance"))
employee
#Calculate and print the employee's annual salary (12 times the monthly salary).
annual_salary = Salary * 12
#Calculate and print the employee's annual salary (12 times the monthly salary).
annual_salary = employee$Salary *12
annual_salary
employee <- list(EmployeeID = 101, Name= "Shawn", Salary = 51599, Departments = c("Marketing","Finance"))
employee
#Calculate and print the employee's annual salary (12 times the monthly salary).
annual_salary = employee$Salary *12
annual_salary
#Update the employee's name to a different name.
employee$Name = "Nintu"
employee
#Add a new department to the Departments vector for the employee.
employee$Departments = c("Sales")
employee
employee <- list(EmployeeID = 101, Name= "Shawn", Salary = 51599, Departments = c("Marketing","Finance"))
employee
#Calculate and print the employee's annual salary (12 times the monthly salary).
annual_salary = employee$Salary *12
annual_salary
#Update the employee's name to a different name.
employee$Name = "Nintu"
employee
#Add a new department to the Departments vector for the employee.
employee$Departments = c(employee$Departments,"Sales")
employee
organization <- list(Name, Employees<- list(EmployeeID = 101, Name= "Shawn", Salary = 51599, Departments = c("Marketing","Finance"),
EmployeeID = 102, Name= "Vishnu", Salary = 86399, Departments = c("Development","Management"),
EmployeeID = 103, Name= "Alwin", Salary = 76431, Departments = c("Sales","Distribution")))
organization <- list(Name = "Oracle", Employees<- list(EmployeeID = 101, Name= "Shawn", Salary = 51599, Departments = c("Marketing","Finance"),
EmployeeID = 102, Name= "Vishnu", Salary = 86399, Departments = c("Development","Management"),
EmployeeID = 103, Name= "Alwin", Salary = 76431, Departments = c("Sales","Distribution")))
organisation
organization
organization <- list(Name = "Oracle", Employees<- list(employee,
EmployeeID = 102,Name= "Vishnu",
Salary = 86399, Departments = c("Development","Management"),
EmployeeID = 103, Name= "Alwin",
Salary = 76431, Departments = c("Sales","Distribution")))
organization
#Access and print the annual salary of the second employee in the organization.
organization$Employees[2]
#Access and print the annual salary of the second employee in the organization.
organization$Employees[[2]]
organization <- list(Name = "Oracle", Employees = list(employee,
EmployeeID = 102,Name= "Vishnu",
Salary = 86399, Departments = c("Development","Management"),
EmployeeID = 103, Name= "Alwin",
Salary = 76431, Departments = c("Sales","Distribution")))
#Access and print the annual salary of the second employee in the organization.
Second_emp = organization$Employees[2]
Second_emp
#Access and print the annual salary of the second employee in the organization.
Second_emp = organization$Employees[2,2]
#Access and print the annual salary of the second employee in the organization.
Second_emp = organization$Employees[[2]]
Second_emp
#Access and print the annual salary of the second employee in the organization.
Second_emp = organization$Employees[[2]]$Salary*12
#Access and print the annual salary of the second employee in the organization.
Second_emp = organization$Employees
Second_emp
#Access and print the annual salary of the second employee in the organization.
Second_emp = organization$Employees[3]
Second_emp
#Access and print the annual salary of the second employee in the organization.
Second_emp = organization$Employees[1]
Second_emp
organization <- list(Name = "Oracle", Employees = list(employee,
list(EmployeeID = 102,Name= "Vishnu",
Salary = 86399, Departments = c("Development","Management")),
list(EmployeeID = 103, Name= "Alwin",
Salary = 76431, Departments = c("Sales","Distribution"))))
#Display the entire content of the nested list organization.
organization
#Access and print the annual salary of the second employee in the organization.
Second_emp = organization$Employees[[2]]$Salary*12
Second_emp
#Access and print the name of the organization.
organization$Name
department_employees <- list()
for(emp in organization$Employees)
{
dept=emp$Departments
for(d in dept)
{
if(is.null(department_employees[[d]]))
{ department_employees[[d]]=list(emp)}
else
{ department_employees[[d]]=c(department_employees[[d]],list(emp))}
}
}
department_employees
department_employees <- list(
HR = list(),
Finance = list(),
Sales = list(),
Marketing = list(),
IT = list(),
Computer = list()
)
for (emp in organization$employees) {
for (dept in emp$Departments) {
department_employees[[dept]] <- c(department_employees[[dept]], emp$Name)
}
}
department_employees
department_employees <- list()
# Group employees by department
for (employee in employees) {
for (department in employee$Departments) {
if (department %in% names(department_employees)) {
department_employees[[department]] <- c(department_employees[[department]], employee)
} else {
department_employees[[department]] <- list(employee)
}
}
}
#Print each list created in the script to show the structure and content of the lists after performing the operations in Tasks 1-5.
str(department_employees);department_employees
str(employee);employee
str(organization);organization
str(Employees);Employees
#Create a list named employee representing the details of an employee with the following components:
#EmployeeID: A unique employee identifier (as a numeric value).
#Name: The employee's full name (as a string).
#Salary: The employee's monthly salary (as a numeric value).
#Departments: A vector containing the names of the departments the employee is associated with (as strings).
#Display the entire content of the employee list.
employee <- list(EmployeeID = 101, Name= "Shawn", Salary = 51599, Departments = c("Marketing","Finance"))
employee
#Calculate and print the employee's annual salary (12 times the monthly salary).
annual_salary = employee$Salary *12
annual_salary
#Update the employee's name to a different name.
employee$Name = "Nintu"
employee
#Add a new department to the Departments vector for the employee.
employee$Departments = c(employee$Departments,"Sales")
employee
#Create a list named organization to represent an organization with the following components:
#Name: The name of the organization (as a string).
#Employees: A list containing details of at least three employees, using the structure created in Task 1.
organization <- list(Name = "Oracle", Employees = list(employee,
list(EmployeeID = 102,Name= "Vishnu",
Salary = 86399, Departments = c("Development","Management")),
list(EmployeeID = 103, Name= "Alwin",
Salary = 76431, Departments = c("Sales","Distribution"))))
#Display the entire content of the nested list organization.
organization
#Access and print the annual salary of the second employee in the organization.
Second_emp = organization$Employees[[2]]$Salary*12
Second_emp
#Access and print the name of the organization.
organization$Name
#Create a new list named department_employees that groups employees by department.Each department should have a list of employees associated with it.
department_employees = list()
department_employees
#Print each list created in the script to show the structure and content of the lists after performing the operations in Tasks 1-5.
str(department_employees);department_employees
str(employee);employee
str(Employees);Employees
str(organization);organization
#Also, print the department_employees list to demonstrate how employees are grouped by department.
print("Department Employees List:")
print(department_employees)
#Create a list named employee representing the details of an employee with the following components:
#EmployeeID: A unique employee identifier (as a numeric value).
#Name: The employee's full name (as a string).
#Salary: The employee's monthly salary (as a numeric value).
#Departments: A vector containing the names of the departments the employee is associated with (as strings).
#Display the entire content of the employee list.
employee <- list(EmployeeID = 101, Name= "Shawn", Salary = 51599, Departments = c("Marketing","Finance"))
employee
#Calculate and print the employee's annual salary (12 times the monthly salary).
annual_salary = employee$Salary *12
annual_salary
#Update the employee's name to a different name.
employee$Name = "Nintu"
employee
#Add a new department to the Departments vector for the employee.
employee$Departments = c(employee$Departments,"Sales")
employee
#Create a list named organization to represent an organization with the following components:
#Name: The name of the organization (as a string).
#Employees: A list containing details of at least three employees, using the structure created in Task 1.
organization <- list(Name = "Oracle", Employees = list(employee,
list(EmployeeID = 102,Name= "Vishnu",
Salary = 86399, Departments = c("Development","Management")),
list(EmployeeID = 103, Name= "Alwin",
Salary = 76431, Departments = c("Sales","Distribution"))))
#Display the entire content of the nested list organization.
organization
#Access and print the annual salary of the second employee in the organization.
Second_emp = organization$Employees[[2]]$Salary*12
Second_emp
#Access and print the name of the organization.
organization$Name
#Create a new list named department_employees that groups employees by department.Each department should have a list of employees associated with it.
department_employees = list()
department_employees
#Print each list created in the script to show the structure and content of the lists after performing the operations in Tasks 1-5.
str(department_employees);department_employees
str(employee);employee
str(Employees);Employees
str(organization);organization
#Also, print the department_employees list to demonstrate how employees are grouped by department.
print("Department Employees List:")
print(department_employees)
department_employees <- list()
for (employee in organization$Employees) {
departments <- employee$Departments
for (dept in departments) {
if (dept %in% names(department_employees)) {
department_employees[[dept]] <- c(department_employees[[dept]], employee$Name)
} else {
department_employees[[dept]] <- list(employee$Name)
}
}
}
department_employees
#Print each list created in the script to show the structure and content of the lists after performing the operations in Tasks 1-5.
str(department_employees);department_employees
str(employee);employee
str(Employees);Employees
str(organization);organization
print(department_employees)
str(department_employees);department_employees
str(employee);employee
str(employee);employee
employee <- list(EmployeeID = 101, Name= "Shawn", Salary = 51599, Departments = c("Marketing","Finance"))
employee
#Calculate and print the employee's annual salary (12 times the monthly salary).
annual_salary = employee$Salary *12
annual_salary
#Update the employee's name to a different name.
employee$Name = "Nintu"
employee
#Add a new department to the Departments vector for the employee.
employee$Departments = c(employee$Departments,"Sales")
employee
#Create a list named organization to represent an organization with the following components:
#Name: The name of the organization (as a string).
#Employees: A list containing details of at least three employees, using the structure created in Task 1.
organization <- list(Name = "Oracle", Employees = list(employee,
list(EmployeeID = 102,Name= "Vishnu",
Salary = 86399, Departments = c("Development","Management")),
list(EmployeeID = 103, Name= "Alwin",
Salary = 76431, Departments = c("Sales","Distribution"))))
#Display the entire content of the nested list organization.
organization
#Access and print the annual salary of the second employee in the organization.
Second_emp = organization$Employees[[2]]$Salary*12
Second_emp
#Access and print the name of the organization.
organization$Name
#Create a new list named department_employees that groups employees by department.Each department should have a list of employees associated with it.
department_employees <- list()
for (employee in organization$Employees) {
departments <- employee$Departments
for (dept in departments) {
if (dept %in% names(department_employees)) {
department_employees[[dept]] <- c(department_employees[[dept]], employee$Name)
} else {
department_employees[[dept]] <- list(employee$Name)
}
}
}
department_employees
#Print each list created in the script to show the structure and content of the lists after performing the operations in Tasks 1-5.
str(department_employees);department_employees
str(employee);employee
str(Employees);Employees
str(organization);organization
#Print each list created in the script to show the structure and content of the lists after performing the operations in Tasks 1-5.
str(department_employees);department_employees
organization$Employees
str(organization$Employees);
str(organization$Employees);
organization$Employees
#Create a new list named department_employees that groups employees by department.Each department should have a list of employees associated with it.
department_employees <- list()
for (emp in organization$Employees) {
departments <- emp$Departments
for (dept in departments) {
if (dept %in% names(department_employees)) {
department_employees[[dept]] <- c(department_employees[[dept]], emp$Name)
} else {
department_employees[[dept]] <- list(emp$Name)
}
}
}
department_employees
#Create a list named employee representing the details of an employee with the following components:
#EmployeeID: A unique employee identifier (as a numeric value).
#Name: The employee's full name (as a string).
#Salary: The employee's monthly salary (as a numeric value).
#Departments: A vector containing the names of the departments the employee is associated with (as strings).
#Display the entire content of the employee list.
employee <- list(EmployeeID = 101, Name= "Shawn", Salary = 51599, Departments = c("Marketing","Finance"))
employee
#Calculate and print the employee's annual salary (12 times the monthly salary).
annual_salary = employee$Salary *12
annual_salary
#Update the employee's name to a different name.
employee$Name = "Nintu"
employee
#Add a new department to the Departments vector for the employee.
employee$Departments = c(employee$Departments,"Sales")
employee
#Create a list named organization to represent an organization with the following components:
#Name: The name of the organization (as a string).
#Employees: A list containing details of at least three employees, using the structure created in Task 1.
organization <- list(Name = "Oracle", Employees = list(employee,
list(EmployeeID = 102,Name= "Vishnu",
Salary = 86399, Departments = c("Development","Management")),
list(EmployeeID = 103, Name= "Alwin",
Salary = 76431, Departments = c("Sales","Distribution"))))
#Display the entire content of the nested list organization.
organization
#Access and print the annual salary of the second employee in the organization.
Second_emp = organization$Employees[[2]]$Salary*12
Second_emp
#Access and print the name of the organization.
organization$Name
#Create a new list named department_employees that groups employees by department.Each department should have a list of employees associated with it.
department_employees <- list()
for (emp in organization$Employees) {
departments <- emp$Departments
for (dept in departments) {
if (dept %in% names(department_employees)) {
department_employees[[dept]] <- c(department_employees[[dept]], emp$Name)
} else {
department_employees[[dept]] <- list(emp$Name)
}
}
}
department_employees
#Print each list created in the script to show the structure and content of the lists after performing the operations in Tasks 1-5.
str(department_employees);department_employees
str(employee);employee
str(organization$Employees);organization$Employees
str(organization);organization
#Also, print the department_employees list to demonstrate how employees are grouped by department.
print("Department Employees List:")
print(department_employees)
#Create a list named employee representing the details of an employee with the following components:
#EmployeeID: A unique employee identifier (as a numeric value).
#Name: The employee's full name (as a string).
#Salary: The employee's monthly salary (as a numeric value).
#Departments: A vector containing the names of the departments the employee is associated with (as strings).
#Display the entire content of the employee list.
employee <- list(EmployeeID = 101, Name= "Shawn", Salary = 51599, Departments = c("Marketing","Finance"))
employee
#Calculate and print the employee's annual salary (12 times the monthly salary).
annual_salary = employee$Salary *12
annual_salary
#Update the employee's name to a different name.
employee$Name = "Nintu"
employee
#Add a new department to the Departments vector for the employee.
employee$Departments = c(employee$Departments,"Sales")
employee
#Create a list named organization to represent an organization with the following components:
#Name: The name of the organization (as a string).
#Employees: A list containing details of at least three employees, using the structure created in Task 1.
organization <- list(Name = "Oracle", Employees = list(employee,
list(EmployeeID = 102,Name= "Vishnu",
Salary = 86399, Departments = c("Development","Management")),
list(EmployeeID = 103, Name= "Alwin",
Salary = 76431, Departments = c("Sales","Management"))))
#Display the entire content of the nested list organization.
organization
#Access and print the annual salary of the second employee in the organization.
Second_emp = organization$Employees[[2]]$Salary*12
Second_emp
#Access and print the name of the organization.
organization$Name
#Create a new list named department_employees that groups employees by department.Each department should have a list of employees associated with it.
department_employees <- list()
for (emp in organization$Employees) {
departments <- emp$Departments
for (dept in departments) {
if (dept %in% names(department_employees)) {
department_employees[[dept]] <- c(department_employees[[dept]], emp$Name)
} else {
department_employees[[dept]] <- list(emp$Name)
}
}
}
department_employees
#Print each list created in the script to show the structure and content of the lists after performing the operations in Tasks 1-5.
str(department_employees);department_employees
str(employee);employee
str(organization$Employees);organization$Employees
str(organization);organization
#Also, print the department_employees list to demonstrate how employees are grouped by department.
print("Department Employees List:")
print(department_employees)
#create a sample dataset
student_scores <- data.frame(
student_id = 1:100,
gender = sample(c("Male","Female"),100,replace = TRUE),
age = sample(18:25,100,replace = TRUE),
ExamScore = round(runif(100,min = 50,max=100),1)
)
#SAVE THE DATASET AS CSV FILE
write.csv(student_scores,"student_scores.csv",row.names = FALSE)
#CSV FILE
print(getwd())
setwd("D:\\Progrmming\Applied-Statistics-using-R\classworks")
setwd("D:\\Progrmming\Applied-Statistics-using-R\classworks")
setwd("D:\\Progrmming\Applied-Statistics-using-R\classworks")
setwd("D:\\Progrmming\\Applied-Statistics-using-R\\classworks")
data <- read.csv("student_scores.csv")
#create a sample dataset
student_scores <- data.frame(
student_id = 1:100,
gender = sample(c("Male","Female"),100,replace = TRUE),
age = sample(18:25,100,replace = TRUE),
ExamScore = round(runif(100,min = 50,max=100),1)
)
#SAVE THE DATASET AS CSV FILE
write.csv(student_scores,"student_scores.csv",row.names = FALSE)
#CSV FILE
print(getwd())
setwd("D:\\Progrmming\\Applied-Statistics-using-R\\classworks")
data <- read.csv("student_scores.csv")
print(getwd())
print(data)
print(is.data.frame(data))
print(ncol(data))
print(nrow(data))
#create a data frame.
data <- read.csv("input.csv")
#create a data frame.
data <- read.csv("input.csv")
#create a data frame.
data <- read.csv("student_scores.csv")
#get the max salary from data frame
sal <- max(data$ExamScore)
print(sal)
#get the max salary from data frame
Mark <- max(data$ExamScore)
print(Mark)
#get the person details having max salary
retval <- subset(data, Mark == max(Mark))
print(retval)
View(student_scores.csv)
View(data)
head(data)
#last datas
tail(data)
head(data,3)
tail(data,10)
#first 6 data // default 6
head(data)
#last datas
tail(data)
print(Mark)
#viewing the dataset
View(data)
#get the person details having max marks
retval <- subset(data, ExamScore == max(ExamScore))
print(retval)
