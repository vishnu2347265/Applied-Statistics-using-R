discoveries[1:100]
discoveries[1:4]
str(precip)
precip[1:70]
precip[1:4]
str(rivers)
rivers[1:141]
rivers[1:4]
str(discoveries)
discoveries[1:100]
discoveries[1:4]
help("stripchart")
stripchart(precip, xlab = "rainfall")
stripchart(rivers,method = "jitter",xlab = "length")
stripchart(precip, xlab = "rainfall")
stripchart(rivers,method = "jitter",xlab = "length")
stripchart(precip,method = "jitter" , xlab = "rainfall")
stripchart(precip, xlab = "rainfall")
stripchart(discoveries,xlab = "numbers", method = "jitter")
stripchart(discoveries,xlab = "numbers", method = "stack")
stripchart(discoveries,xlab = "numbers")
stripchart(discoveries,xlab = "numbers", method = "jitter")
stripchart(discoveries,xlab = "numbers", method = "stack")
stripchart(discoveries,xlab = "numbers", method = "overflow")
help("stripchart")
stripchart(discoveries,xlab = "numbers", method = "overplot")
help("hist")
hist(rivers)
hist(rivers,freq = TRUE)
hist(rivers,freq = FALSE)
hist(rivers,freq = TRUE)
hist(rivers)
hist(rivers,freq = FALSE)
hist(rivers,freq = TRUE)
hist(rivers,freq = TRUE)
hist(rivers,freq = FALSE)
hist(rivers,freq = TRUE,break=10, main="H i s t o g r a m of rivers ")
hist(rivers,freq = TRUE,break=10, main = "H i s t o g r a m of rivers ")
hist(rivers,freq = TRUE , break=10, main = "H i s t o g r a m of rivers ")
hist(rivers,freq = TRUE , break = 10, main = "H i s t o g r a m of rivers ")
hist(rivers,freq = TRUE , breaks = 10, main = "H i s t o g r a m of rivers ")
hist(rivers, breaks = 200)
hist(rivers,freq = TRUE , breaks = 10, main = "H i s t o g r a m of rivers WITH BREAK 10 ")
hist(rivers, breaks = 200, main = "histogrAM OF RIVERS WITH BREAK 200")
#MTCARS HISTOGRAM AND STRIPCHART
hist(mtcars)
#MTCARS HISTOGRAM AND STRIPCHART
df = mtcars
print(mtcars)
print(df)
hist(df)
hist(df$mpg)
#MTCARS HISTOGRAM AND STRIPCHART
cars = mtcars
print(cars)
cars$am =cars am
str(cars)
cars$cyl = as.ordered(cars$cyl)
str(cars)
str(cars)
cars$gear = as.ordered(cars$gear)
cars$carb = as.ordered(cars$carb)
cars$vs = as.factor(cars$vs)
cars$am = as.factor(cars$am)
str(cars)
hist(df$mpg, method)
hist(df$mpg)
hist(cars$cyl)
barplot(cars$cyl)
barplot(cars$cyl, height = table(cars$cyl))
barplot(height = table(cars$cyl))
cars
hist(df$mpg)"
barplot(height = table(cars$cyl),legend.text = "he",)
hist(df$mpg)"
barplot(height = table(cars$cyl),legend.text = he,)
barplot(height = table(cars$cyl),legend.text = he,)
barplot(height = table(cars$cyl),legend.text = he)
hist(df$mpg)
barplot(height = table(cars$cyl),legend.text = he)
barplot(height = table(cars$cyl),legend.text = "dsvcx")
barplot(height = table(cars$cyl),xlab = dvczz)
barplot(height = table(cars$cyl),xlab = "")
barplot(height = table(cars$cyl),xlab = "dscv")
barplot(height = table(cars$cyl),xlab = "no of cylinder")
str(cars)
hist(cars)
hist(cars$mpg)
install.packages("ggplot2")
library(ggplot2)
g1=ggplot(mtcars,aes(mpg,disp))
g1
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
g1=ggplot(mtcars,aes(mpg,disp))
install.packages("ggplot2")
g1
install.packages("ggplot2")
g1+geom_text(aes(label=cyl),size=3)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
g1=ggplot(mtcars,aes(mpg,disp))
g1
g1+geom_text(aes(label=cyl),size=3)
ggplot(data=mtcars,aes(x=mpg,y=hp,col=factor(cyl),size=factor((gear)))+geom_point()+labs(size="gears",col="cyl")
myscarplot=ggplot(mtcars,aes(x=wt,y=mpg,col=factor(cyl),size=wt))+geom_point()
myscarplot+facet_grid()
ggplot(data=mtcars,mapping = aes(x=mpg,fill=as.factor(cyl)))+geom_density(alpha=1)
bar1=ggplot(data=mtcars,mapping = aes(x=cyl,fill=as.factor(am)))
bar1+geom_bar()
ggplot(data=mtcars,aes(x=as.factor(cyl),fill=as.factor(cyl)))+geom_bar()+scale_fill_brewer(palette = "Accent")+theme(legend.position = "top")
bar1+geom_bar()
myscarplot=ggplot(mtcars,aes(x=wt,y=mpg,col=factor(cyl),size=wt))+geom_point()
myscarplot+facet_grid()
ggplot(data=mtcars,mapping = aes(x=mpg,fill=as.factor(cyl)))+geom_density(alpha=1)
bar1=ggplot(data=mtcars,mapping = aes(x=cyl,fill=as.factor(am)))
bar1+geom_bar()
g1+geom_text(aes(label=cyl),size=3)
ggplot(data=mtcars,aes(x=mpg,y=hp,col=factor(cyl),size=factor((gear)))+geom_point()+labs(size="gears",col="cyl")
myscarplot=ggplot(mtcars,aes(x=wt,y=mpg,col=factor(cyl),size=wt))+geom_point()
myscarplot+facet_grid()
g1=ggplot(mtcars,aes(mpg,disp))
g1
g1+geom_text(aes(label=cyl),size=3)
ggplot(data=mtcars,aes(x=mpg,y=hp,col=factor(cyl),size=factor((gear)))+geom_point()+labs(size="gears",col="cyl")
myscarplot=ggplot(mtcars,aes(x=wt,y=mpg,col=factor(cyl),size=wt))+geom_point()
myscarplot+facet_grid()
myscarplot=ggplot(mtcars,aes(x=wt,y=mpg,col=factor(cyl),size=wt))+geom_point()
ggplot(data=mtcars,aes(x=mpg,y=hp,col=factor(cyl),size=factor((gear)))+geom_point()+labs(size="gears",col="cyl")
myscarplot=ggplot(mtcars,aes(x=wt,y=mpg,col=factor(cyl),size=wt))+geom_point()
myscarplot+facet_grid()
ggplot(data=mtcars,mapping = aes(x=mpg,fill=as.factor(cyl)))+geom_density(alpha=1)
bar1=ggplot(data=mtcars,mapping = aes(x=cyl,fill=as.factor(am)))
bar1+geom_bar()
ggplot(data=mtcars,aes(x=as.factor(cyl),fill=as.factor(cyl)))+geom_bar()+scale_fill_brewer(palette = "Accent")+theme(legend.position = "top")
bar1+geom_bar()
box=ggplot(mtcars,aes(x=factor(am),y=wt,fill=factor(am)))
box=ggplot(mtcars,aes(x=factor(am),))
box1=notch()
box+geom_boxplot(outlier.colour="red",outlier.shape=8,
outlier.size=4)
ggplot(data=mtcars,aes(x=mpg,y=hp,col=factor(cyl),size=factor((gear)))+geom_point()+labs(size="gears",col="cyl")
myscarplot=ggplot(mtcars,aes(x=wt,y=mpg,col=factor(cyl),size=wt))+geom_point()
myscarplot+facet_grid()
ggplot(data=mtcars,mapping = aes(x=mpg,fill=as.factor(cyl)))+geom_density(alpha=1)
bar1=ggplot(data=mtcars,mapping = aes(x=cyl,fill=as.factor(am)))
bar1+geom_bar()
ggplot(data=mtcars,aes(x=as.factor(cyl),fill=as.factor(cyl)))+geom_bar()+scale_fill_brewer(palette = "Accent")+theme(legend.position = "top")
bar1+geom_bar()
box=ggplot(mtcars,aes(x=factor(am),y=wt,fill=factor(am)))
box=ggplot(mtcars,aes(x=factor(am),y=wt,fill=factor(am)))
box=ggplot(mtcars,aes(x=factor(am),))
box1=notch()
box+geom_boxplot(outlier.colour="red",outlier.shape=8,
outlier.size=4)
p=ggplot(mtcars,aes(x=factor(am),y=wt,fill=factor(cyl)))+geom_violin(trim=FALSE)
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
g1=ggplot(mtcars,aes(mpg,disp))
g1
g1+geom_text(aes(label=cyl),size=3)
ggplot(data=mtcars,aes(x=mpg,y=hp,col=factor(cyl),size=factor((gear)))+geom_point()+labs(size="gears",col="cyl")
myscarplot=ggplot(mtcars,aes(x=wt,y=mpg,col=factor(cyl),size=wt))+geom_point()
ggplot(data=mtcars,aes(x=as.factor(cyl),fill=as.factor(cyl)))+geom_bar()+scale_fill_brewer(palette = "Accent")+theme(legend.position = "top")
bar1+geom_bar()
install.packages("moments")
library(moments)
install.packages("moments")
a=c(10,20,30)
install.packages("moments")
library(moments)
a=c(10,20,30)
skewness(a)
install.packages("moments")
install.packages("moments")
library(moments)
a=c(10,20,30)
skewness(a)
hist(a)
x <- c(40,41,42,43,50)
print(skewness(x))
hist(x)
x<-rnorm(50,10,10)
print(skewness(x))
hist(x)
den = density(a)
plot(den, frame=FALSE,col="blue" ,main = "density plot")
b<-rnorm(50,10,10)
print(skewness(b))
hist(b)
den = density(b)
plot(den, frame=FALSE,col="blue" ,main = "density plot")
set.seed(3548148)
xnorm <- rnorm(5000)
head(xnorm)
hist(xnorm,prob=TRUE)
lines(density(xnorm),col=2,lwd=2)
lines(density(xnorm),col=2,lwd=3)
lines(density(xnorm),col=2,lwd=10)
lines(density(xnorm),col=2,lwd=10)
set.seed(123456789)
xnorm <- rnorm(5000)
head(xnorm)
hist(xnorm,prob=TRUE)
lines(density(xnorm),col=2,lwd=10)
help("kurtosis")
x<-c(rep(61,each=10),rep(64,each=18),
rep(65,each=10),rep(64,each=18),rep(61,each=10),rep(64,each=18),
rep(61,each=10),rep(64,each=18))
print(kurtosis(x))
x<-rnorm(100)
print(kurtosis(x))
hist(x)
mean(mtcars$mpg)
mode(mtcars$mpg)
median(mtcars$mpg)
mod(mtcars$mpg)
e
e
e
mode(mtcars$mpg)
median(mtcars$mpg)
range(mtcars$wt)
help(horsepower)
hp <- mtcars$hp
print(hp)
hist(hp)
skewness(hp)
kurtosis(hp)
mean(hp)
mode(hp)
median(hp)
dis<-mtcars$disp
skewness(dis)
kurtosis(dis)
plot(density(dis))
plot(density(dis),col="blue")
plot(density(dis),col="blue",frame=FALSE)
plot(density(dis),col="blue",frame=FALSE,main = "plit")
plot(density(dis),col="blue",frame=FALSE,main = "plot")
plot(skewness(dis))
plot(skewness(dis),prob=TRUE)
plot(skewness(dis))
kurtosis(dis)
plot(density(dis),col="blue",frame=FALSE,main = "plot")
data()
#one sample
#hypothesis testing
capt_crisp <- data.frame(weight=c(15.5,16.2,16.1,15.8,15.6,16.0,15.8,15.9,16.2))
capt_crisp
?t.test
x_bar = mean(capt_crisp)
x_bar = mean(capt_crisp$weight)
x_bar
s=sd(capt_crisp$weight)
s
??t.test
mu_o=16
n=length(capt_crisp$weight)
n
??t.test
t.test(capt_crisp,
alternative = c("two.sided", "less", "greater"),
mu = 16, paired = FALSE, var.equal = FALSE,
conf.level = 0.95)
install.packages(c("ggplot2","ggubr","tidyverse","broom","AICcmodavg"))
install.packages(c("ggplot2", "ggubr", "tidyverse", "broom", "AICcmodavg"))
install.packages(c("ggplot2", "ggubr", "tidyverse", "broom", "AICcmodavg"))
install.packages(c("ggplot2", "ggubr", "tidyverse", "broom", "AICcmodavg"))
library(ggplot2)
install.packages(c("ggubr","tidyverse","broom","AICcmodavg"))
library(ggplot2)
library(AICcmodavg)
library(ggubr)
library(ggubr)
library(tidyverse)
library(broom)
library(ggubr)
library(AICcmodavg)
library(ggubr)
library(tidyverse)
library(broom)
install.packages(c("ggubr"))
library(ggplot2)
library(AICcmodavg)
library(ggubr)
library(tidyverse)
library(broom)
library(ggubr)
crop.data <- read.csv("D:\Progrmming\Applied-Statistics-using-R\classworks\crop.data.csv")
crop.data <- read.csv("D:\Progrmming/Applied-Statistics-using-R/classworks/crop.data.csv")
crop.data <- read.csv("D:/Progrmming/Applied-Statistics-using-R/classworks/crop.data.csv")
summary(crop.data)
one.way <- aov(yield~fertilizer,data = crop_data )
one.way <- aov(yield~fertilizer,data = crop.data )
summary(one.way)
two.way<- aov(yield ~ fertilizer + density,data = crop.data)
summary(two.way)
interaction <- aov(yield~fertilizer*density,data = crop.data)
summary(interaction)
install.packages(c("ggubr"))
library(ggubr)
install.packages(c("ggubr"))
install.packages(("ggubr"))
library(ggplot2)
library(ggubr)
install.packages(c("ggubr"))
df <- data.frame( x = c(1,2,3,4,5), y = c(1,5,8,15,26))
df
linear_model <- lm(y ~ x^2, data=df)
summary(linear_model)
predict(linear_model,newdata = data.frame(x=c(15,16,17)))
plot(linear_model)
?cars
View(cars)
str(cars)
dim(cars)
dim(cars)
View(cars)
str(cars)
dim(cars)
plot(dist~speed, data=cars, xlab="Speed",ylab="Stropping Distance",main="Stopping Distance Vs Speed",pch=20,cex=2,col="green")
plot(dist~speed, data=cars, xlab="Speed",ylab="Stopping Distance",main="Stopping Distance Vs Speed",pch=20,cex=2,col="green")
x=cars$speed
y=cars$dist
Sumofxy=sum((x-mean(x))*(y-mean(y)))
Sxx = sum((x-mean(x))^2)
Syy = sum((y-mean(y))^2)
c(Sxy,Sxx,Syy)
c(Sumofxy,Sxx,Syy)
beta_i_hat=Sumofxy/Sxx
beta_0_hat=mean(y)-beta_i_hat*mean(x)
c(beta_0_hat,beta_i_hat)
dim(cars)
c(beta_0_hat,beta_i_hat)
unique(cars$speed)
16-(beta_0_hat+beta_i_hat*8)
beta_i_hat
y_hat=beta_0_hat+(beta_i_hat*x)
y_hat
min(cars$speed)<21 & 21<max(cars$speed)
50 %in% unique(cars$speed)
beta_0_hat+beta_1_hat*50
beta_0_hat+beta_i_hat*50
Epsilon_error = 16 -(beta_0_hat + beta_1_hat*8)
Epsilon_error = 16 -(beta_0_hat + beta_i_hat*8)
Epsilon_error
y_hat = beta_0_hat+beta_1_hat*x
y_hat = beta_0_hat+beta_i_hat*x
y_hat
error_for_all = y - y_hat
error_for_all
min(cars)
16-(beta_0_hat+beta_i_hat*8)
n=length(e);n
n=length(e);
16-(beta_0_hat+beta_i_hat*8)
e=y-y_hat;e
n=length(e);n
s2_e=sum(e^2)/(n-2);s2_e
s_e=sqrt(s2_e);s_e
#calc sum od square error, total sum of square
SST=sum((y-mean(y))^2)
SSReg=sum((y_hat-mean(y))^2)
SSE=sum((y-y_hat)^2)
c(SST=SST,SSReg=SSReg,SSE=SSE)
#se2=SSE/n-2
SSE/(n-2)
s2_e==SSE/(n-2) #verify with previous calculated value
#Coefficient of determination R2 is the proprortion of observation variation in y in the regresion on the model
R2=SSReg/SST;R2
#65% of observed variability in stopping
stop_dist_model = lm(dist~speed,data=cars)
stop_dist_model
c(beta0_hat,beta_i_hat)
c(beta_0_hat,beta_i_hat)
plot(dist~speed,data = cars,main="Stoping Distance vs Speed",col="blue",pch=20)
abline(stop_dist_model,lwd=3,col="black")
names(stop_dist_model)
setwd("D:/Progrmming/Applied-Statistics-using-R/labworks/cia 3")
data=read.csv("Originaldata.csv")
# Assuming your data set is named 'data' and the relevant variable is 'X4..How.often.do.you.engage.in.physical.exercise.per.week.'
data$exercise_frequency <- factor(data$X4..How.often.do.you.engage.in.physical.exercise.per.week.,
levels = c("Never", "1 - 2 times", "3 - 4 times", "5 or more times"),
labels = c(0, 1, 3.5, 5))
data$exercise_frequency <- as.numeric(as.character(data$exercise_frequency))
age_group_15_25 <- data[data$X1..Age >= 15 & data$X1..Age <= 25, "exercise_frequency"]
specified_value <- 3
t_test_result <- t.test(age_group_15_25, mu = specified_value)
cat("One-Sample t-Test Results:\n")
cat("Test Statistic:", t_test_result$statistic, "\n")
cat("p-value:", t_test_result$p.value, "\n")
data$exercise_frequency <- factor(data$X4..How.often.do.you.engage.in.physical.exercise.per.week.,
levels = c("Never", "1 - 2 times", "3 - 4 times", "5 or more times"),
labels = c(0, 1, 3.5, 5))
data$exercise_frequency <- as.numeric(as.character(data$exercise_frequency))
age_group_15_25 <- data[data$X1..Age >= 15 & data$X1..Age <= 25, "exercise_frequency"]
age_group_26_30 <- data[data$X1..Age >= 26 & data$X1..Age <= 30, "exercise_frequency"]
t_test_result <- t.test(age_group_15_25, age_group_26_30)
cat("Two-Sample t-Test Results (Independent):\n")
cat("Test Statistic:", t_test_result$statistic, "\n")
cat("p-value:", t_test_result$p.value, "\n")
data$exercise_frequency <- factor(data$X4..How.often.do.you.engage.in.physical.exercise.per.week.,
levels = c("Never", "1 - 2 times", "3 - 4 times", "5 or more times"),
labels = c(0, 1, 3.5, 5))
data$exercise_frequency <- as.numeric(as.character(data$exercise_frequency))
data$age_group <- cut(data$X1..Age, breaks = c(15, 25, 30, 35), labels = c("15-25", "26-30", "31-35"))
data_no_missing <- na.omit(data)
length(data$age_group)
length(data$exercise_frequency)
anova_result <- aov(exercise_frequency ~ age_group, data = data_no_missing)
length(anova_result)
cat("One-Way ANOVA Results:\n")
print(summary(anova_result))
data$exercise_frequency <- factor(data$X4..How.often.do.you.engage.in.physical.exercise.per.week.,
levels = c("Never", "1 - 2 times", "3 - 4 times", "5 or more times"),
labels = c(0, 1, 3.5, 5))  # Assigning numerical values based on the midpoints
data$exercise_frequency <- as.numeric(as.character(data$exercise_frequency))
data$age_group <- as.factor(cut(data$X1..Age, breaks = c(15, 25, 30, 35), labels = c("15-25", "26-30", "31-35")))
data$gender <- as.factor(data$X2..Gender)
two_way_anova_result <- aov(exercise_frequency ~ age_group * gender, data = data)
cat("Two-Way ANOVA Results:\n")
print(summary(two_way_anova_result))
# Convert the variable to numeric
data$X5..On.average..how.many.minutes.do.you.spend.on.each.exercise.session... <- as.numeric(as.character(data$X5..On.average..how.many.minutes.do.you.spend.on.each.exercise.session...))
overall_mean <- mean(data$X5..On.average..how.many.minutes.do.you.spend.on.each.exercise.session..., na.rm = TRUE)
# Specify the null hypothesis value as the overall mean
specified_value <- overall_mean
# Extract data for employed individuals
employed_data <- data[data$X3..Occupation == "employed", ]
# Perform One-Sample t-Test
t_test_result <- t.test(employed_data$X5..On.average..how.many.minutes.do.you.spend.on.each.exercise.session..., mu = specified_value)
# Display the results
cat("One-Sample t-Test Results for Employed Individuals:\n")
cat("Test Statistic:", t_test_result$statistic, "\n")
cat("p-value:", t_test_result$p.value, "\n")
specified_value <- 30
# Extract data for employed individuals
employed_data <- data[data$X3..Occupation == "employed", ]
# Perform One-Sample t-Test
t_test_result <- t.test(employed_data$X5..On.average..how.many.minutes.do.you.spend.on.each.exercise.session..., mu = specified_value)
# Display the results
cat("One-Sample t-Test Results for Employed Individuals:\n")
cat("Test Statistic:", t_test_result$statistic, "\n")
cat("p-value:", t_test_result$p.value, "\n")
# Create a factor variable for occupation
data$occupation_group <- factor(data$X3..Occupation)
# Perform One-Way ANOVA
anova_result <- aov(X5..On.average..how.many.minutes.do.you.spend.on.each.exercise.session... ~ occupation_group, data = data)
# Display the results
cat("One-Way ANOVA Results:\n")
print(summary(anova_result))
# Clean up variable names
data$ExerciseTime <- as.numeric(data$X5..On.average..how.many.minutes.do.you.spend.on.each.exercise.session...)
# Check and handle missing values
data <- data[complete.cases(data), ]
# Check data type
str(data$ExerciseTime)
# Create a two-way ANOVA model
anova_model <- aov(data$ExerciseTime ~ data$X3..Occupation + data$X2..Gender, data = data)
# Display the results
cat("Two-Way ANOVA Results:\n")
print(summary(anova_model))
# Check for missing values
missing_values <- is.na(data$X5..On.average..how.many.minutes.do.you.spend.on.each.exercise.session...)
# Print rows with missing values
print(data[missing_values, ])
# Handle missing values (replace with a specific value or impute)
# For example, replacing NAs with the mean of the variable
data$X5..On.average..how.many.minutes.do.you.spend.on.each.exercise.session...[missing_values] <- mean(data$X5..On.average..how.many.minutes.do.you.spend.on.each.exercise.session..., na.rm = TRUE)
# Convert to numeric
data$X5..On.average..how.many.minutes.do.you.spend.on.each.exercise.session... <- as.numeric(data$X5..On.average..how.many.minutes.do.you.spend.on.each.exercise.session...)
# Fit Simple Linear Regression
model <- lm(data$X5..On.average..how.many.minutes.do.you.spend.on.each.exercise.session... ~ data$X3..Occupation, data = data)
# Print the summary of the regression model
summary(model)
plot(model)
